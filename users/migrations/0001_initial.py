# Generated by Django 4.0.3 on 2022-04-01 11:27

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MailingList',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('phone_number', models.CharField(max_length=12)),
                ('insights', models.CharField(choices=[('Y', 'YES'), ('N', 'NO')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('org_name', models.CharField(blank=True, max_length=255, null=True)),
                ('emp_count', models.IntegerField(blank=True, default=0, null=True)),
                ('bio', models.TextField(blank=True, max_length=1000, null=True)),
                ('mission', models.CharField(blank=True, max_length=255, null=True)),
                ('vision', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=15, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('address', models.TextField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=255, null=True)),
                ('coi_moa_aoa', models.CharField(blank=True, max_length=255, null=True)),
                ('board_resolution', models.CharField(blank=True, max_length=255, null=True)),
                ('authorized_signatory', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(blank=True, choices=[('B', 'Broker'), ('P', 'Product Provider'), ('W', 'Wealth Business')], max_length=1, null=True)),
                ('Individual', models.CharField(blank=True, choices=[('I', 'Individual'), ('N', 'Non Individual')], max_length=1, null=True)),
                ('pan', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('aadhar', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('bank_proof', models.URLField(blank=True, null=True, verbose_name='Bank Proof')),
                ('cancelled_cheque', models.URLField(blank=True, null=True, verbose_name='Cancelled Cheque')),
                ('CRM_report', models.URLField(blank=True, null=True, verbose_name='CMR Report')),
                ('demat', models.URLField(blank=True, null=True, verbose_name='Demant')),
                ('tan', models.CharField(blank=True, max_length=255, null=True, verbose_name='TAN')),
                ('gst', models.CharField(blank=True, max_length=255, null=True, verbose_name='GST')),
                ('transaction_type', models.CharField(blank=True, choices=[('P', 'Prop Book'), ('R', 'Refferal')], max_length=1, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.organization')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
